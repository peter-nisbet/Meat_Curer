C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\pnisbet
                    -\Documents\Silabs_Workspace\Meat_Curer\src\InitDevice.c SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3
                    -) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\pnisbet\Documents\Silabs_Workspace\Meat
                    -_Curer\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//kits/common/drivers/efm8_retargetserial;C:/Sil
                    -iconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/dev
                    -eloper/sdks/8051/v4.0.9//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9/kits/common/bs
                    -p;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//kits/EFM8SB1_SLSTK2010A/config;C:/SiliconLabs/Simplicit
                    -yStudio/v4/developer/sdks/8051/v4.0.9//kits/common/bsp) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) O
                    -BJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8SB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              PCA_0_enter_DefaultMode_from_RESET();
  27   1              VREG_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              HFOSC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              SMBUS_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // Restore the SFRPAGE
  39   1              SFRPAGE = SFRPAGE_save;
  40   1              // [Config Calls]$
  41   1      
  42   1      }
  43          
  44          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  45   1              // $[PCA0MD - PCA Mode]
  46   1              /***********************************************************************
  47   1               - Disable Watchdog Timer
  48   1               - System clock divided by 12
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 2   

  49   1               - PCA continues to function normally while the system controller is in
  50   1               Idle Mode
  51   1               - Disable the CF interrupt
  52   1               - Disable Watchdog Timer
  53   1               - Watchdog Timer Enable unlocked
  54   1               ***********************************************************************/
  55   1              SFRPAGE = 0x00;
  56   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  57   1              PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
  58   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  59   1                              | PCA0MD_WDLCK__UNLOCKED;
  60   1              // [PCA0MD - PCA Mode]$
  61   1      
  62   1              // $[PCA0H - PCA Counter/Timer High Byte]
  63   1              // [PCA0H - PCA Counter/Timer High Byte]$
  64   1      
  65   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  66   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  67   1      
  68   1              // $[PCA0PWM - PCA PWM Configuration]
  69   1              // [PCA0PWM - PCA PWM Configuration]$
  70   1      
  71   1              // $[PCA0CN0 - PCA Control 0]
  72   1              // [PCA0CN0 - PCA Control 0]$
  73   1      
  74   1      }
  75          
  76          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
  77   1              // $[REG0CN - Voltage Regulator Control]
  78   1              /***********************************************************************
  79   1               - Enable the precision High Frequency Oscillator bias
  80   1               ***********************************************************************/
  81   1              REG0CN = REG0CN_OSCBIAS__ENABLED;
  82   1              // [REG0CN - Voltage Regulator Control]$
  83   1      
  84   1      }
  85          
  86          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  87   1              // $[P0 - Port 0 Pin Latch]
  88   1              // [P0 - Port 0 Pin Latch]$
  89   1      
  90   1              // $[P0MDOUT - Port 0 Output Mode]
  91   1              /***********************************************************************
  92   1               - P0.0 output is open-drain
  93   1               - P0.1 output is open-drain
  94   1               - P0.2 output is open-drain
  95   1               - P0.3 output is open-drain
  96   1               - P0.4 output is push-pull
  97   1               - P0.5 output is open-drain
  98   1               - P0.6 output is open-drain
  99   1               - P0.7 output is open-drain
 100   1               ***********************************************************************/
 101   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 102   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 103   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 104   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 105   1              // [P0MDOUT - Port 0 Output Mode]$
 106   1      
 107   1              // $[P0MDIN - Port 0 Input Mode]
 108   1              // [P0MDIN - Port 0 Input Mode]$
 109   1      
 110   1              // $[P0SKIP - Port 0 Skip]
 111   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 3   

 112   1               - P0.0 pin is skipped by the crossbar
 113   1               - P0.1 pin is skipped by the crossbar
 114   1               - P0.2 pin is skipped by the crossbar
 115   1               - P0.3 pin is skipped by the crossbar
 116   1               - P0.4 pin is not skipped by the crossbar
 117   1               - P0.5 pin is not skipped by the crossbar
 118   1               - P0.6 pin is skipped by the crossbar
 119   1               - P0.7 pin is skipped by the crossbar
 120   1               ***********************************************************************/
 121   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 122   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 123   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 124   1              // [P0SKIP - Port 0 Skip]$
 125   1      
 126   1              // $[P0MASK - Port 0 Mask]
 127   1              // [P0MASK - Port 0 Mask]$
 128   1      
 129   1              // $[P0MAT - Port 0 Match]
 130   1              // [P0MAT - Port 0 Match]$
 131   1      
 132   1              // $[P0DRV - Port 0 Drive Strength]
 133   1              // [P0DRV - Port 0 Drive Strength]$
 134   1      
 135   1      }
 136          
 137          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 138   1              // $[XBR2 - Port I/O Crossbar 2]
 139   1              /***********************************************************************
 140   1               - Weak Pullups enabled 
 141   1               - Crossbar enabled
 142   1               ***********************************************************************/
 143   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 144   1              // [XBR2 - Port I/O Crossbar 2]$
 145   1      
 146   1              // $[XBR0 - Port I/O Crossbar 0]
 147   1              /***********************************************************************
 148   1               - UART TX, RX routed to Port pins P0.4 and P0.5
 149   1               - SPI I/O unavailable at Port pins
 150   1               - SMBus 0 I/O routed to Port pins
 151   1               - CP0 unavailable at Port pin
 152   1               - Asynchronous CP0 unavailable at Port pin
 153   1               - SYSCLK unavailable at Port pin
 154   1               ***********************************************************************/
 155   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 156   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED
 157   1                              | XBR0_SYSCKE__DISABLED;
 158   1              // [XBR0 - Port I/O Crossbar 0]$
 159   1      
 160   1              // $[XBR1 - Port I/O Crossbar 1]
 161   1              // [XBR1 - Port I/O Crossbar 1]$
 162   1      
 163   1      }
 164          
 165          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 166   1              // $[HFO#CAL - High Frequency Oscillator Calibration]
 167   1              // [HFO#CAL - High Frequency Oscillator Calibration]$
 168   1      
 169   1              // $[HFO#CN - High Frequency Oscillator Control]
 170   1              /***********************************************************************
 171   1               - High Frequency Oscillator enabled
 172   1               ***********************************************************************/
 173   1              HFO0CN |= HFO0CN_IOSCEN__ENABLED;
 174   1              // [HFO#CN - High Frequency Oscillator Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 4   

 175   1      
 176   1              // $[Oscillator Ready]
 177   1              while ((HFO0CN & HFO0CN_IFRDY__BMASK) == HFO0CN_IFRDY__NOT_SET)
 178   1                      ;
 179   1              // [Oscillator Ready]$
 180   1      
 181   1      }
 182          
 183          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 184   1              // $[CLKSEL - Clock Select]
 185   1              /***********************************************************************
 186   1               - SYSCLK is equal to selected clock source divided by 1
 187   1               - Clock derived from the internal precision High-Frequency Oscillator
 188   1               ***********************************************************************/
 189   1              CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC;
 190   1              // Wait for the clock to be ready
 191   1              while ((CLKSEL & CLKSEL_CLKRDY__BMASK) != CLKSEL_CLKRDY__SET)
 192   1                      ;
 193   1              // [CLKSEL - Clock Select]$
 194   1      
 195   1      }
 196          
 197          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 198   1              // $[Timer Initialization]
 199   1              //Save Timer Configuration
 200   1              uint8_t TCON_save;
 201   1              TCON_save = TCON;
 202   1              //Stop Timers
 203   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 204   1      
 205   1              // [Timer Initialization]$
 206   1      
 207   1              // $[TH0 - Timer 0 High Byte]
 208   1              // [TH0 - Timer 0 High Byte]$
 209   1      
 210   1              // $[TL0 - Timer 0 Low Byte]
 211   1              // [TL0 - Timer 0 Low Byte]$
 212   1      
 213   1              // $[TH1 - Timer 1 High Byte]
 214   1              /***********************************************************************
 215   1               - Timer 1 High Byte = 0x96
 216   1               ***********************************************************************/
 217   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 218   1              // [TH1 - Timer 1 High Byte]$
 219   1      
 220   1              // $[TL1 - Timer 1 Low Byte]
 221   1              // [TL1 - Timer 1 Low Byte]$
 222   1      
 223   1              // $[Timer Restoration]
 224   1              //Restore Timer Configuration
 225   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 226   1      
 227   1              // [Timer Restoration]$
 228   1      
 229   1      }
 230          
 231          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 232   1              // $[CKCON0 - Clock Control 0]
 233   1              /***********************************************************************
 234   1               - System clock divided by 12
 235   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 236   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 237   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 5   

 238   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 239   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 240   1               - Timer 1 uses the system clock
 241   1               ***********************************************************************/
 242   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 243   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 244   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 245   1                              | CKCON0_T1M__SYSCLK;
 246   1              // [CKCON0 - Clock Control 0]$
 247   1      
 248   1              // $[TMOD - Timer 0/1 Mode]
 249   1              /***********************************************************************
 250   1               - Mode 0, 13-bit Counter/Timer
 251   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 252   1               - Timer Mode
 253   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 254   1               - Timer Mode
 255   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 256   1               ***********************************************************************/
 257   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 258   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 259   1              // [TMOD - Timer 0/1 Mode]$
 260   1      
 261   1              // $[TCON - Timer 0/1 Control]
 262   1              /***********************************************************************
 263   1               - Start Timer 1 running
 264   1               ***********************************************************************/
 265   1              TCON |= TCON_TR1__RUN;
 266   1              // [TCON - Timer 0/1 Control]$
 267   1      
 268   1      }
 269          
 270          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 271   1      
 272   1              // $[P1 - Port 1 Pin Latch]
 273   1              // [P1 - Port 1 Pin Latch]$
 274   1      
 275   1              // $[P1MDOUT - Port 1 Output Mode]
 276   1              /***********************************************************************
 277   1               - P1.0 output is push-pull
 278   1               - P1.1 output is push-pull
 279   1               - P1.2 output is open-drain
 280   1               - P1.3 output is open-drain
 281   1               - P1.4 output is open-drain
 282   1               - P1.5 output is open-drain
 283   1               - P1.6 output is open-drain
 284   1               - P1.7 output is open-drain
 285   1               ***********************************************************************/
 286   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 287   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 288   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 289   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 290   1              // [P1MDOUT - Port 1 Output Mode]$
 291   1      
 292   1              // $[P1MDIN - Port 1 Input Mode]
 293   1              // [P1MDIN - Port 1 Input Mode]$
 294   1      
 295   1              // $[P1SKIP - Port 1 Skip]
 296   1              /***********************************************************************
 297   1               - P1.0 pin is skipped by the crossbar
 298   1               - P1.1 pin is skipped by the crossbar
 299   1               - P1.2 pin is not skipped by the crossbar
 300   1               - P1.3 pin is not skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 6   

 301   1               - P1.4 pin is not skipped by the crossbar
 302   1               - P1.5 pin is not skipped by the crossbar
 303   1               - P1.6 pin is not skipped by the crossbar
 304   1               - P1.7 pin is not skipped by the crossbar
 305   1               ***********************************************************************/
 306   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 307   1                              | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 308   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 309   1                              | P1SKIP_B7__NOT_SKIPPED;
 310   1              // [P1SKIP - Port 1 Skip]$
 311   1      
 312   1              // $[Missing Pin Skip]
 313   1              // [Missing Pin Skip]$
 314   1      
 315   1              // $[P1MASK - Port 1 Mask]
 316   1              // [P1MASK - Port 1 Mask]$
 317   1      
 318   1              // $[P1MAT - Port 1 Match]
 319   1              // [P1MAT - Port 1 Match]$
 320   1      
 321   1              // $[P1DRV - Port 1 Drive Strength]
 322   1              // [P1DRV - Port 1 Drive Strength]$
 323   1      
 324   1      }
 325          
 326          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 327   1              // $[SMB0ADR - SMBus 0 Slave Address]
 328   1              // [SMB0ADR - SMBus 0 Slave Address]$
 329   1      
 330   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 331   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 332   1      
 333   1              // $[SMB0CF - SMBus 0 Configuration]
 334   1              /***********************************************************************
 335   1               - Timer 2 Low Byte Overflow
 336   1               - Slave states are inhibited
 337   1               - Enable the SMBus module
 338   1               - Enable bus free timeouts
 339   1               - Enable SDA extended setup and hold times
 340   1               ***********************************************************************/
 341   1              SMB0CF |= SMB0CF_SMBCS__TIMER2_LOW | SMB0CF_INH__SLAVE_DISABLED
 342   1                              | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED
 343   1                              | SMB0CF_EXTHOLD__ENABLED;
 344   1              // [SMB0CF - SMBus 0 Configuration]$
 345   1      
 346   1      }
 347          
 348          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 349   1              // $[EIE1 - Extended Interrupt Enable 1]
 350   1              /***********************************************************************
 351   1               - Disable ADC0 Conversion Complete interrupt
 352   1               - Disable ADC0 Window Comparison interrupt
 353   1               - Disable CP0 interrupts
 354   1               - Disable all PCA0 interrupts
 355   1               - Disable RTC Alarm interrupts
 356   1               - Enable interrupt requests generated by SMB0
 357   1               - Disable Timer 3 interrupts
 358   1               ***********************************************************************/
 359   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 360   1                              | EIE1_EPCA0__DISABLED | EIE1_ERTC0A__DISABLED | EIE1_ESMB0__ENABLED
 361   1                              | EIE1_ET3__DISABLED;
 362   1              // [EIE1 - Extended Interrupt Enable 1]$
 363   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 7   

 364   1              // $[EIP1 - Extended Interrupt Priority 1]
 365   1              // [EIP1 - Extended Interrupt Priority 1]$
 366   1      
 367   1              // $[IE - Interrupt Enable]
 368   1              /***********************************************************************
 369   1               - Enable each interrupt according to its individual mask setting
 370   1               - Disable external interrupt 0
 371   1               - Disable external interrupt 1
 372   1               - Disable all SPI0 interrupts
 373   1               - Disable all Timer 0 interrupt
 374   1               - Disable all Timer 1 interrupt
 375   1               - Disable Timer 2 interrupt
 376   1               - Disable UART0 interrupt
 377   1               ***********************************************************************/
 378   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 379   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 380   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 381   1              // [IE - Interrupt Enable]$
 382   1      
 383   1              // $[IP - Interrupt Priority]
 384   1              // [IP - Interrupt Priority]$
 385   1      
 386   1              // $[EIE2 - Extended Interrupt Enable 2]
 387   1              // [EIE2 - Extended Interrupt Enable 2]$
 388   1      
 389   1              // $[EIP2 - Extended Interrupt Priority 2]
 390   1              // [EIP2 - Extended Interrupt Priority 2]$
 391   1      
 392   1      }
 393          
 394          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 395   1              // $[Timer Initialization]
 396   1              // Save Timer Configuration
 397   1              uint8_t TMR2CN0_TR2_save;
 398   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 399   1              // Stop Timer
 400   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 401   1              // [Timer Initialization]$
 402   1      
 403   1              // $[TMR2CN0 - Timer 2 Control]
 404   1              /***********************************************************************
 405   1               - Timer 2 operates as two 8-bit auto-reload timers
 406   1               - External Clock is SYSCLK/12. Capture trigger is Comparator 0
 407   1               ***********************************************************************/
 408   1              TMR2CN0 &= ~TMR2CN0_T2XCLK__FMASK;
 409   1              TMR2CN0 |= TMR2CN0_T2SPLIT__8_BIT_RELOAD
 410   1                              | TMR2CN0_T2XCLK__SYSCLK_DIV_12_CAP_CMP;
 411   1              // [TMR2CN0 - Timer 2 Control]$
 412   1      
 413   1              // $[TMR2H - Timer 2 High Byte]
 414   1              // [TMR2H - Timer 2 High Byte]$
 415   1      
 416   1              // $[TMR2L - Timer 2 Low Byte]
 417   1              // [TMR2L - Timer 2 Low Byte]$
 418   1      
 419   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 420   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 421   1      
 422   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 423   1              /***********************************************************************
 424   1               - Timer 2 Reload Low Byte = 0xBC
 425   1               ***********************************************************************/
 426   1              TMR2RLL = (0xBC << TMR2RLL_TMR2RLL__SHIFT);
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/12/2017 09:49:12 PAGE 8   

 427   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 428   1      
 429   1              // $[TMR2CN0]
 430   1              // [TMR2CN0]$
 431   1      
 432   1              // $[Timer Restoration]
 433   1              // Restore Timer Configuration
 434   1              TMR2CN0 |= TMR2CN0_TR2_save;
 435   1              // [Timer Restoration]$
 436   1      
 437   1      }
 438          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    154    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
