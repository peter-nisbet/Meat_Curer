C51 COMPILER V9.53.0.0   MEAT_CURER_MAIN                                                   12/12/2017 13:32:31 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MEAT_CURER_MAIN
OBJECT MODULE PLACED IN .\src\Meat_Curer_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\pnisbet
                    -\Documents\Silabs_Workspace\Meat_Curer\src\Meat_Curer_main.c SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\pnisbet\Documents\Silabs_Workspace
                    -\Meat_Curer\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//kits/common/drivers/efm8_retargetserial;C
                    -:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v
                    -4/developer/sdks/8051/v4.0.9//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9/kits/comm
                    -on/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//kits/EFM8SB1_SLSTK2010A/config;C:/SiliconLabs/Simp
                    -licityStudio/v4/developer/sdks/8051/v4.0.9//kits/common/bsp) PRINT(.\src\Meat_Curer_main.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\Meat_Curer_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/Meat_Curer_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8SB1_Register_Enums.h>                  // SFR declarations
  13          #include <si_toolchain.h>
  14          #include "InitDevice.h"
  15          #include "retargetserial.h"
  16          #include "smbus.h"
  17          // $[Generated Includes]
  18          // [Generated Includes]$
  19          
  20          //Function Prototype//
  21          unsigned int delay(long x);
  22          unsigned int compDelay(int u);
  23          void UpdateCurrentMeasurement(void);
  24          
  25          //Structure Defines//
  26          typedef struct LOG_T {
  27                  int16_t celsiusTemperature;
  28                  uint16_t percentHumidity;
  29          } LOG;
  30          
  31          //Global Variables//
  32          LOG currentMeasurement;
  33          
  34          //-----------------------------------------------------------------------------
  35          // Pin Definitions
  36          //-----------------------------------------------------------------------------
  37          SI_SBIT(LED0, SFR_P1, 1);// '0' means ON, '1' means OFF
  38          SI_SBIT(COMP, SFR_P1, 0);// '0' means ON, '1' means OFF
  39          
  40          SI_SBIT(SDA, SFR_P1, 2);//I2C SDA line
  41          SI_SBIT(SCL, SFR_P1, 3);//I2C SDA line
  42          
  43          //-----------------------------------------------------------------------------
  44          // SiLabs_Startup() Routine
  45          // ----------------------------------------------------------------------------
  46          // This function is called immediately after reset, before the initialization
  47          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  48          // useful place to disable the watchdog timer, which is enable by default
C51 COMPILER V9.53.0.0   MEAT_CURER_MAIN                                                   12/12/2017 13:32:31 PAGE 2   

  49          // and may trigger before main() in some instances.
  50          //-----------------------------------------------------------------------------
  51          void SiLabs_Startup(void) {
  52   1      
  53   1      }
  54          
  55          //-----------------------------------------------------------------------------
  56          // main() Routine
  57          // ----------------------------------------------------------------------------
  58          int main(void) {
  59   1      
  60   1              // Call hardware initialization routine
  61   1              enter_DefaultMode_from_RESET();
  62   1              SCON0_TI = 1;   //Enable TX for UART
  63   1      
  64   1              ResetSensor();
  65   1              printf("Humidity Temperature Sensor Reset! \n\r");
  66   1      
  67   1              while (1) {
  68   2      // $[Generated Run-time code]
  69   2      // [Generated Run-time code]$
  70   2                      /*LED0 = 1;
  71   2                      COMP = 1;
  72   2                      printf("Compressor On! \r\n");
  73   2                      UpdateCurrentMeasurement();
  74   2                      printf("Humidity is: %u\r\n", currentMeasurement.percentHumidity);
  75   2                      printf("Temperature is: %u\r\n", currentMeasurement.celsiusTemperature);
  76   2                      compDelay(3);
  77   2                      //delay(10000);
  78   2                      LED0 = 0;
  79   2                      COMP = 0;
  80   2                      printf("Compressor Off! \r\n");
  81   2                      compDelay(3);
  82   2                      //delay(10000);*/
  83   2      
  84   2                      //Actual Code//
  85   2                      UpdateCurrentMeasurement();             //Get the latest Temp and Humidity Values.
  86   2      
  87   2                      if(currentMeasurement.celsiusTemperature > 120 || currentMeasurement.percentHumidity > 80)
  88   2                      {
  89   3                              LED0 = 1;
  90   3                              COMP = 1;
  91   3                              printf("Compressor On! \r\n");
  92   3                      }
  93   2                      else if(currentMeasurement.celsiusTemperature < 100 || currentMeasurement.percentHumidity < 30)
  94   2                      {
  95   3                              LED0 = 0;
  96   3                              COMP = 0;
  97   3                              printf("Compressor Off! \r\n");
  98   3                      }
  99   2                      printf("Humidity is: %u\r\n", currentMeasurement.percentHumidity);
 100   2                      printf("Temperature is: %u\r\n", currentMeasurement.celsiusTemperature);
 101   2      
 102   2                      compDelay(3);
 103   2              }
 104   1      }
 105          // $[SiLabs Startup]
 106          // [SiLabs Startup]$
 107          
 108          unsigned int delay(long x) {
 109   1              long i, y;
 110   1      
 111   1              for (y = 0; y < x; y++) {
C51 COMPILER V9.53.0.0   MEAT_CURER_MAIN                                                   12/12/2017 13:32:31 PAGE 3   

 112   2                      for (i = 0; i < 310; i++) {
 113   3                              _nop_();
 114   3                      }
 115   2              }
 116   1              return 0;
 117   1      }
 118          
 119          void UpdateCurrentMeasurement(void) {
 120   1              uint32_t calculationHolder;
 121   1      
 122   1              // Reset the Temperature & Humidity Sensor.
 123   1              //ResetSensor();
 124   1      
 125   1              calculationHolder = (((uint32_t) 125) * MeasureAndReadHumidity());
 126   1              // Covert read value to percent humidity following formula in si7021 data sheet
 127   1              currentMeasurement.percentHumidity = (uint8_t)(
 128   1                              (calculationHolder >> 16) - 6);
 129   1      
 130   1              // Covert read value to celsius temperature following formula in si7021 data sheet
 131   1              //calculationHolder = (((uint32_t) 17572) * ReadTemperature()); //Changed by Peter
 132   1              calculationHolder = (((uint32_t) 17572) * MeasureAndReadTemperature());
 133   1              calculationHolder = ((calculationHolder >> 16) - 4685);
 134   1              currentMeasurement.celsiusTemperature = (int16_t)(calculationHolder / 10);
 135   1      
 136   1              // Reset the Temperature & Humidity Sensor.
 137   1              //ResetSensor();
 138   1      
 139   1      }
 140          
 141          unsigned int compDelay(int u)
 142          {
 143   1              int t;
 144   1              for(t = 0; t < u; t++)
 145   1              {
 146   2                      delay(60000);
 147   2              }
 148   1              return 0;
 149   1      }
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    378    ----
   CONSTANT SIZE    =    114    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
